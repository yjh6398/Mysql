Q：关系数据库的操作
A：并（UNION）、笛卡尔积（CARTESIAN PRODUCT）、内连接（自然连接、等值连接、不等连接）、外连接（左外连接、右外连接、全外连接）

子查询操作是连接操作的替代操作，因为连接操作的操作效率较低。

1.内连接查询:就是在表关系的笛卡尔积数据记录中，保留表关系中所有匹配的数据记录，舍弃不匹配的数据记录。按照匹配的条件可以分为等值连接、自然连接和不等连接。
  SELECT filed1,filed2,...
      FORM join_tablename1 INNER JOIN join_tablename2
       ON join_condition
  1.1 自连接
      表与自身进行连接
  1.2 等值连接 
      在关键字ON后面的匹配条件中通过等于关系运算符（=）来实现等值条件
  1.3 不等连接
      在关键字ON后面的匹配条件中通过不等关系(<>)来实现不等条件

2.外连接查询：就是在表关系的笛卡尔积数据记录中，不仅保留表关系中所有匹配的数据记录，而且还会保留部分不匹配的数据记录。按照保留不配条件数据记录的来源可以分为左外连接、右外连接和全外连接
  外连接查询可以分为左外连接、右外连接、全外连接
  左外连接：结果集中包含左表的全部行以及右表中全部匹配的行
  右外连接：结果集中包含右表的全部行以及左表中全部匹配的行
  全外连接：结果集中包含两个表的全部行，不管是否存在相匹配的行
  SELECT filed1，filed2,filed3,....
    FROM join_tablename1 LEFT|RIGHT|FULL OUTER JOIN join_tablename2
  ON join_condition

3.合并查询数据记录

  关键字UNION会把查询结果直接合并在一起，同时将会去掉重复数据记录

  SELECT filed1，filed2,...
    FROM table_name1
  UNION 
  SELECT filed1,filed2,...
    FROM table_name2
   
   关键字UNION ALL 会把查询结果直接合并在一起，而不会去掉重复数据记录
SELECT filed1，filed2,...
    FROM table_name1
  UNION ALL
  SELECT filed1,filed2,...
    FROM table_name2

3.子查询
  在一个查询之中嵌套了其他若干查询
  Q:为什么要使用子查询？
  A:对于下列语句
    SELECT * 
      FORM t_dept t,t_employee l
    ON t.no=l.no
  在上述语句执行过程中，会对这两个表进行笛卡尔积操作，然后选取符合匹配条件的数据记录，如果这两张表的数据记录比较大时，则在进行笛卡尔积操作时会造成死机。
  对于有经验的用户，往往会先查看笛卡尔积后的数据记录数
   SELECT * COUNT(*)
     FROM t_dept t,t_employee l
  如果查询到的数据记录数，MySQL可以接受，则进行连接查询；如果数据记录数太多，则应该选择子查询
  
 子查询语句示例
   （1）select * 
           from t_table1
         where sal>(
           select sal 
               from t_table2 
                   where ename='ton');
    (2)select ename,sal,job 
           from t_table1
         where (sal,job)=(
           select sal,job 
               from t_table2 
                   where ename='ton');
    (3)NOT IN
       select * 
           from t_table1
         where dept_no NOT IN(
           select dept_no 
               from t_table2);
    (4)ANY
       select ename,sal 
           from t_table1
         where sal>ANY(
           select sal 
               from t_table2
                   where job='hgsrfqwe'       );
   (5)ALL
      select ename,sal 
           from t_table1
         where sal>ALL(
           select sal 
               from t_table2
                   where job='hgsrfqwe'       );
   
  （6）EXISTS
      select * 
           from t_table1
         where EXISTS(
           select * 
               from t_table2 
                   where ename='ton');
       

 
